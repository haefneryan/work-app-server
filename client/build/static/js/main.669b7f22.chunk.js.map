{"version":3,"sources":["components/layout/Navbar.js","components/layout/Table/TableHeaders.js","components/selects/EngineerSelect.js","pages/AllOrders.js","components/selects/StyleNumbersSelect.js","pages/AddOrder.js","pages/Triage.js","pages/Dashboard.js","pages/Completed.js","App.js","index.js"],"names":["Navbar","className","classes","header","to","TableHeaders","EngineerSelect","value","AllOrders","props","orders","deleteOrder","updateWorkload","updateTriageOwner","updateOwner","length","map","order","customer","stylenumber","defaultValue","triageowner","onChange","e","owner","type","min","max","workload","triagecomplete","designcomplete","duedate","disabled","onClick","_id","StyleNumbers","AddOrder","addOrder","placeholder","id","Triage","triageOrders","updateTriageComplete","Dashboard","dashboardOrders","updateDesignComplete","updateBuildTime","buildtime","Completed","completedOrders","App","url","useState","setOrders","setTriageOrders","setDashboardOrders","setCompletedOrders","dataLoaded","setDataLoaded","renderCount","useRef","useEffect","getOrders","current","setFilters","a","axios","get","headers","res","data","console","log","window","confirm","delete","then","catch","error","getToday","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","filter","x","path","element","put","target","alert","document","getElementById","post","ReactDOM","render","basename","process"],"mappings":"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","file":"static/js/main.669b7f22.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport classes from './Navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <nav>\r\n                <ul>\r\n                    {/* <li><Link to='/'>ALL ORDERS</Link></li> */}\r\n                    <li><Link to='/triage'>TRIAGE</Link></li>\r\n                    <li><Link to='/dashboard'>DASHBOARD</Link></li>\r\n                    <li><Link to='/completed'>COMPLETED</Link></li>\r\n                    <li><Link to='/create-new-order'>CREATE NEW ORDER</Link></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nfunction TableHeaders() {\r\n    return (\r\n        <>\r\n            <td>Customer</td>\r\n            <td>Style Number</td>\r\n            <td>Sales Order</td>\r\n            <td>SO Line Item</td>\r\n            <td>Triage Owner</td>\r\n            <td>Owner</td>\r\n            <td>Workload</td>\r\n            <td>Buildtime</td>\r\n            <td>Triage Complete</td>\r\n            <td>Design Complete</td>\r\n            <td>Due Date</td>\r\n            <td>Triage Complete</td>\r\n            <td>Design Complete</td>\r\n            <td>Delete</td>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableHeaders\r\n","import React from 'react'\r\n\r\nfunction EngineerSelect() {\r\n    return (\r\n        <>\r\n            <option value='None'>None</option>\r\n            <option value='Engineer 1'>Engineer 1</option>\r\n            <option value='Engineer 2'>Engineer 2</option>\r\n            <option value='Engineer 3'>Engineer 3</option>\r\n            <option value='Engineer 4'>Engineer 4</option>\r\n            <option value='Engineer 5'>Engineer 5</option>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EngineerSelect\r\n","import React from 'react'\r\nimport TableHeaders from '../components/layout/Table/TableHeaders'\r\nimport EngineerSelect from '../components/selects/EngineerSelect';\r\n\r\n//import classes from './AllOrders.css'\r\n\r\nfunction AllOrders(props) {\r\n    const { orders, deleteOrder, updateWorkload, updateTriageOwner, updateOwner } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h3>ALL ORDERS ({orders.length})</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <TableHeaders />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map(order => {\r\n                        return (\r\n                            <tr key={order._id}>\r\n                                <td>{order.customer}</td>\r\n                                <td>{order.stylenumber}</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <select defaultValue={order.triageowner} onChange={(e) => updateTriageOwner(order, e)}>\r\n                                        <EngineerSelect />\r\n                                    </select>\r\n                                </td>\r\n                                <td>\r\n                                    <select defaultValue={order.owner} onChange={(e) => updateOwner(order, e)}>\r\n                                        <EngineerSelect />\r\n                                    </select>\r\n                                </td>\r\n                                <td><input type='text' min='1' max='1000' defaultValue={order.workload} onChange={(e) => updateWorkload(order, e)} className='workload'></input></td>\r\n                                <td>-</td>\r\n                                <td>{order.triagecomplete}</td>\r\n                                <td>{order.designcomplete}</td>\r\n                                <td>{order.duedate}</td>\r\n                                <td><button disabled>COMPLETE</button></td>\r\n                                <td><button disabled>COMPLETE</button></td>\r\n                                <td><button onClick={() => deleteOrder(order)}>X</button></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllOrders\r\n","import React from 'react'\r\n\r\nfunction StyleNumbers() {\r\n    return (\r\n        <>\r\n            <option>Style Number 1</option>\r\n            <option>Style Number 2</option>\r\n            <option>Style Number 3</option>\r\n            <option>Style Number 4</option>\r\n            <option>Style Number 5</option>\r\n            <option>Style Number 6</option>\r\n            <option>Style Number 7</option>\r\n            <option>Style Number 8</option>\r\n            <option>Style Number 9</option>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StyleNumbers\r\n","import React from 'react'\r\nimport StyleNumberSelect from '../components/selects/StyleNumbersSelect'\r\n\r\nfunction AddOrder(props) {\r\n    const { addOrder } = props\r\n\r\n    return (\r\n        <div>\r\n            Customer: <input type='text' placeholder='Enter the Customer name' id='addOrderCustomer'></input><br></br><br></br>\r\n            Style Number: <select id='addOrderStyleNumber'>\r\n                <StyleNumberSelect />\r\n            </select>\r\n            <br></br><br></br>\r\n            <button onClick={() => addOrder()}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOrder\r\n","import React from 'react'\r\nimport TableHeaders from '../components/layout/Table/TableHeaders'\r\nimport EngineerSelect from '../components/selects/EngineerSelect';\r\n\r\n//import classes from './AllOrders.css'\r\n\r\nfunction Triage(props) {\r\n    const { triageOrders, deleteOrder, updateWorkload, updateTriageOwner, updateOwner, updateTriageComplete } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h3>TRIAGE ({triageOrders.length})</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <TableHeaders />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {triageOrders.map(order => {\r\n                        return (\r\n                            <tr key={order._id}>\r\n                                <td>{order.customer}</td>\r\n                                <td>{order.stylenumber}</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <select defaultValue={order.triageowner} onChange={(e) => updateTriageOwner(order, e)}>\r\n                                        <EngineerSelect />\r\n                                    </select>\r\n                                </td>\r\n                                <td>\r\n                                    <select defaultValue={order.owner} onChange={(e) => updateOwner(order, e)}>\r\n                                        <EngineerSelect />\r\n                                    </select>\r\n                                </td>\r\n                                <td><input type='text' min='1' max='1000' defaultValue={order.workload} onChange={(e) => updateWorkload(order, e)} className='workload'></input></td>\r\n                                <td>-</td>\r\n                                <td>{order.triagecomplete}</td>\r\n                                <td>{order.designcomplete}</td>\r\n                                <td>{order.duedate}</td>\r\n                                <td><button onClick={() => updateTriageComplete(order)}>COMPLETE</button></td>\r\n                                <td><button disabled>COMPLETE</button></td>\r\n                                <td><button onClick={() => deleteOrder(order)}>X</button></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Triage\r\n","import React from 'react'\r\nimport TableHeaders from '../components/layout/Table/TableHeaders'\r\nimport EngineerSelect from '../components/selects/EngineerSelect';\r\n\r\nimport classes from './AllOrders.css'\r\n\r\nfunction Dashboard(props) {\r\n    const { dashboardOrders, deleteOrder, updateOwner, updateDesignComplete, updateBuildTime } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h3>DASHBOARD ({dashboardOrders.length})</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <TableHeaders />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dashboardOrders.map(order => {\r\n                        return (\r\n                            <tr key={order._id}>\r\n                                <td>{order.customer}</td>\r\n                                <td>{order.stylenumber}</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>{order.triageowner}</td>\r\n                                <td>\r\n                                    <select defaultValue={order.owner} onChange={(e) => updateOwner(order, e)}>\r\n                                        <EngineerSelect />\r\n                                    </select>\r\n                                </td>\r\n                                <td className={classes.workload}>{order.workload}</td>\r\n                                <td><input type='text' min='1' max='1000' defaultValue={order.buildtime} onChange={(e) => updateBuildTime(order, e)} className='workload'></input></td>\r\n                                {/* <td><input type='text' min='1' max='1000' defaultValue={order.buildtime} onChange={(e) => updateBuildTime(order, e)} className='buildtime'></input></td> */}\r\n                                <td>{order.triagecomplete}</td>\r\n                                <td>{order.designcomplete}</td>\r\n                                <td>{order.duedate}</td>\r\n                                <td><button disabled>COMPLETE</button></td>\r\n                                <td><button onClick={() => updateDesignComplete(order)}>COMPLETE</button></td>\r\n                                <td><button onClick={() => deleteOrder(order)}>X</button></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport TableHeaders from '../components/layout/Table/TableHeaders'\r\n\r\n//import classes from './AllOrders.css'\r\n\r\nfunction Completed(props) {\r\n    const { completedOrders, deleteOrder } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h3>COMPLETED ({completedOrders.length})</h3>\r\n            <table id='dataTable'>\r\n                <thead>\r\n                    <tr>\r\n                        <TableHeaders />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {completedOrders.map(order => {\r\n                        return (\r\n                            <tr key={order._id}>\r\n                                <td>{order.customer}</td>\r\n                                <td>{order.stylenumber}</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>{order.triageowner}</td>\r\n                                <td>{order.owner}</td>\r\n                                <td>{order.workload}</td>\r\n                                <td>{order.buildtime}</td>\r\n                                <td>{order.triagecomplete}</td>\r\n                                <td>{order.designcomplete}</td>\r\n                                <td>{order.duedate}</td>\r\n                                <td><button disabled>COMPLETE</button></td>\r\n                                <td><button disabled>COMPLETE</button></td>\r\n                                <td><button onClick={() => deleteOrder(order)}>X</button></td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Completed\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport AllOrders from './pages/AllOrders';\r\nimport AddOrder from './pages/AddOrder';\r\nimport Triage from './pages/Triage';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Completed from './pages/Completed';\r\n\r\nimport axios from 'axios';\r\n\r\nconst App = () => {\r\n  const url = 'http://localhost:5000/'\r\n  const [orders, setOrders] = useState({});\r\n  const [triageOrders, setTriageOrders] = useState({});\r\n  const [dashboardOrders, setDashboardOrders] = useState({});\r\n  const [completedOrders, setCompletedOrders] = useState({});\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const renderCount = useRef(0);\r\n\r\n  useEffect(() => {   \r\n    getOrders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    renderCount.current++\r\n    if(renderCount.current > 0 && orders.length > 0) {\r\n      setFilters(orders);\r\n    }\r\n  }, [orders])\r\n\r\n  const getOrders = async () => {\r\n    try {\r\n      const res = await axios.get(url, {\r\n        headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n          'Access-Control-Allow-Origin': '*'\r\n          }\r\n      })\r\n      setOrders(res.data.data)\r\n      setDataLoaded(true)\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const addOrder = () => {\r\n    if (document.getElementById('addOrderCustomer').value.length === 0) {\r\n      alert('Please enter a Customer name')\r\n    } else {\r\n      alert('Order has been created!')\r\n      axios\r\n        .post(url, {\r\n          customer: document.getElementById('addOrderCustomer').value,\r\n          stylenumber: document.getElementById('addOrderStyleNumber').value,\r\n          triageowner: 'None',\r\n          owner: 'None',\r\n          workload: 2,\r\n          buildtime: null,\r\n          triagecomplete: null,\r\n          designcomplete: null,\r\n          duedate: null\r\n        })\r\n        .then(getOrders())\r\n        .catch(error => console.log(error))\r\n        document.getElementById('addOrderCustomer').value = '';\r\n        document.getElementById('addOrderStyleNumber').value = 'Style Number 1';\r\n    }\r\n  }\r\n\r\n  const deleteOrder = (order) => {\r\n    if (window.confirm('Are you sure you want to delete this order?')) {\r\n      axios\r\n        .delete(`${url}${order._id}`)\r\n        .then(getOrders())\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n\r\n  const updateWorkload = (order, e) => { \r\n    axios\r\n    .put(`${url}${order._id}`, { workload: e.target.value })\r\n    .then(getOrders())\r\n    .catch(error => console.log(error))\r\n  }\r\n\r\n  const updateBuildTime = (order, e) => {\r\n    console.log(e.target.value)   \r\n    axios\r\n      .put(`${url}${order._id}`, { buildtime: e.target.value })\r\n      .then(getOrders())\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const updateTriageOwner = (order, e) => {  \r\n    axios\r\n    .put(`${url}${order._id}`, { triageowner: e.target.value })\r\n    .then(getOrders())\r\n    .catch(error => console.log(error))\r\n  }\r\n  \r\n  const updateOwner = (order, e) => {    \r\n    axios\r\n      .put(`${url}${order._id}`, { owner: e.target.value })\r\n      .then(getOrders())\r\n      .catch(error => console.log(error))\r\n  }\r\n\r\n  const getToday = () => {\r\n    let today = new Date()\r\n    let dd = String(today.getDate()).padStart(2, '0')\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0')\r\n    let yyyy = today.getFullYear()\r\n    today = yyyy + '-' + mm + '-' + dd\r\n    return today\r\n  }\r\n\r\n  const updateTriageComplete = (order) => {\r\n    let today = getToday()\r\n    if (order.triageowner === 'None') {\r\n      alert('Please select a triage owner')\r\n    } else if (order.workload === null || order.workload.length === 0) {\r\n      alert('Please enter a workload')\r\n    } else {\r\n      axios\r\n        .put(`${url}${order._id}`, { triagecomplete: today })\r\n        .then(getOrders())\r\n        .catch(error => console.log(error))\r\n      alert(`Order has been marked with triage date of ${today}`)\r\n    }\r\n  }\r\n\r\n  const updateDesignComplete = (order) => {\r\n    let today = getToday()\r\n    if (order.owner === 'None') {\r\n      alert('Please select an owner')\r\n    } else if (order.buildtime === null || order.buildtime.length === 0) {\r\n      alert('Please enter a build time')\r\n    } else {\r\n      axios\r\n        .put(`${url}${order._id}`, { designcomplete: today })\r\n        .then(getOrders())\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n\r\n  const setFilters = (orders) => {\r\n    setTriageOrders(orders.filter((x) => x.triagecomplete === null))\r\n    setDashboardOrders(orders.filter((x) => x.triagecomplete !== null && x.designcomplete === null))\r\n    setCompletedOrders(orders.filter((x) => x.triagecomplete !== null && x.designcomplete !== null))\r\n  }\r\n\r\n  if(dataLoaded === false)\r\n    return (\r\n      <p>loading...</p>\r\n  )\r\n\r\n  if(dataLoaded === true && triageOrders !== null) {\r\n\r\n    return (\r\n      <>\r\n      {/* <OrderState> */}\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <h1>SCHEDULING TOOL</h1>\r\n          <Routes>\r\n            <Route path='/' element={<AllOrders orders={orders} triageOrders={triageOrders} deleteOrder={deleteOrder} />}></Route>\r\n            <Route path='/triage' element={<Triage triageOrders={triageOrders} updateWorkload={updateWorkload} updateTriageOwner={updateTriageOwner} updateTriageComplete={updateTriageComplete} deleteOrder={deleteOrder}/>}></Route>\r\n            <Route path='/dashboard' element={<Dashboard dashboardOrders={dashboardOrders} updateOwner={updateOwner} updateBuildTime={updateBuildTime} deleteOrder={deleteOrder} updateDesignComplete={updateDesignComplete}/>}></Route>\r\n            <Route path='/completed' element={<Completed completedOrders={completedOrders} deleteOrder={deleteOrder}/>}></Route>\r\n            <Route path='/create-new-order' element={<AddOrder addOrder={addOrder}/>}></Route>\r\n          </Routes>\r\n        </div>\r\n      {/* </OrderState> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root')\n);\n"],"sourceRoot":""}